# This starter workflow is for a CMake project running on multiple platforms. There is a different starter workflow if you just want a single platform.
# See: https://github.com/actions/starter-workflows/blob/main/ci/cmake-single-platform.yml
name: Build on all platforms

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

defaults:
  run:
    shell: bash

jobs:
  build-linux:
    name: Linux (Linux, Clang)
    runs-on: ubuntu-latest
    env:
      CC: clang
      CFLAGS: -Werror    
    steps:
    - uses: actions/checkout@v3
    - name: Install dependencies
      run: |
        sudo apt update
        sudo apt install libxrandr-dev libxinerama-dev libxcursor-dev libxi-dev libxext-dev
    - name: Generate Build Files
      run: cmake -S ${{ github.workspace }} -B ${{ github.workspace }}/build
    - name: Build Library
      run: cmake --build ${{ github.workspace }}/build --parallel

  build-macos:
    name: Cocoa (MacOS, Clang)
    runs-on: macos-latest
    env:
      CFLAGS: -Werror
      MACOSX_DEPLOYMENT_TARGET: 10.8    
    steps:
    - uses: actions/checkout@v3
    - name: Generate Build Files
      run: cmake -S ${{ github.workspace }} -B ${{ github.workspace }}/build
    - name: Build Library
      run: cmake --build ${{ github.workspace }}/build --parallel

  build-windows:
    name: Win32 (Windows, Visual Studio 2022)
    runs-on: windows-latest
    env:
      CFLAGS: /WX
    steps:
    - uses: actions/checkout@v3
    - name: Generate Build Files
      run: cmake -S ${{ github.workspace }} -B ${{ github.workspace }}/build -G "Visual Studio 17 2022"
    - name: Build Library
      run: cmake --build ${{ github.workspace }}/build --parallel
  
    
